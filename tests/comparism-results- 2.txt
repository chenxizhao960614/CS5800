Emergency Route Finder
=====================

Loading cached road network...
G:\Edcartech.com\Projects\Base\Jobs\Schools\NothEastern\School Begins\Courses\CS5800 Algorithms Spring 2025\Final Project\codes-base\venv\Lib\site-packages\networkx\readwrite\json_graph\node_link.py:287: FutureWarning: 
The default value will be changed to `edges="edges" in NetworkX 3.6.

To make this warning go away, explicitly set the edges kwarg, e.g.:

  nx.node_link_graph(data, edges="links") to preserve current behavior, or
  nx.node_link_graph(data, edges="edges") for forward compatibility.
  warnings.warn(
Loaded graph with 8109 nodes and 23250 edges
Added weights to 23250/23250 edges        

Simulating rush hour traffic conditions...
Updating graph with traffic data...
Error 403: <h1>Call blocked. You went over the allowed limit.</h1>
Updated 16274 edges with traffic data
Found 0 edges affected by incidents
Updating graph with traffic data...
Updated 16274 edges with traffic data
Found 0 edges affected by incidents

Opening map for point selection...
Please follow these steps:
1. Wait for the map window to load completely
To make this warning go away, explicitly set the edges kwarg, e.g.:

  nx.node_link_graph(data, edges="links") to preserve current behavior, or
  nx.node_link_graph(data, edges="edges") for forward compatibility.
  warnings.warn(
Loaded graph with 8109 nodes and 23250 edges
Added weights to 23250/23250 edges

Simulating rush hour traffic conditions...
Updating graph with traffic data...
Error 403: <h1>Call blocked. You went over the allowed limit.</h1>
Updated 16274 edges with traffic data
Found 0 edges affected by incidents
Updating graph with traffic data...
Updated 16274 edges with traffic data
Found 0 edges affected by incidents

Opening map for point selection...
Please follow these steps:
1. Wait for the map window to load completely
Added weights to 23250/23250 edges

Simulating rush hour traffic conditions...
Updating graph with traffic data...
Error 403: <h1>Call blocked. You went over the allowed limit.</h1>
Updated 16274 edges with traffic data
Found 0 edges affected by incidents
Updating graph with traffic data...
Updated 16274 edges with traffic data
Found 0 edges affected by incidents

Opening map for point selection...
Please follow these steps:
1. Wait for the map window to load completely

Opening map for point selection...
Please follow these steps:
1. Wait for the map window to load completely
1. Wait for the map window to load completely
2. Click once to set your starting point
3. Click again to set your destination
4. Click 'Confirm Selection' when done

Error: Start and end points must be selected.
PS G:\Edcartech.com\Projects\Base\Jobs\Schools\NothEastern\School Begins\Courses\CS5800 Algorithms Spring 2025\Final Project\codes-base> python main.py
Emergency Route Finder
=====================

Loading cached road network...
G:\Edcartech.com\Projects\Base\Jobs\Schools\NothEastern\School Begins\Courses\CS5800 Algorithms Spring 2025\Final Project\codes-base\venv\Lib\site-packages\networkx\readwrite\json_graph\node_link.py:287: FutureWarning: 
The default value will be changed to `edges="edges" in NetworkX 3.6.

To make this warning go away, explicitly set the edges kwarg, e.g.:

  nx.node_link_graph(data, edges="links") to preserve current behavior, or
  nx.node_link_graph(data, edges="edges") for forward compatibility.
  warnings.warn(
Loaded graph with 8109 nodes and 23250 edges
Added weights to 23250/23250 edges        

Simulating rush hour traffic conditions...
Updating graph with traffic data...
Error 403: <h1>Call blocked. You went over the allowed limit.</h1>
Updated 16274 edges with traffic data
Found 0 edges affected by incidents
Updating graph with traffic data...
Updated 16274 edges with traffic data
Found 0 edges affected by incidents

Opening map for point selection...
Please follow these steps:
1. Wait for the map window to load completely
2. Click once to set your starting point
3. Click again to set your destination
4. Click 'Confirm Selection' when done

Calculating optimal routes...
Dijkstra Edge (251653276, 338741184): Weight=16.91s, Node delay=0.00s
Dijkstra Edge (338741184, 428959955): Weight=9.98s, Node delay=0.00s
Dijkstra Edge (428959955, 244085859): Weight=11.99s, Node delay=0.00s
Dijkstra Edge (244085859, 428959956): Weight=20.08s, Node delay=0.00s
Dijkstra Edge (428959956, 11275948091): Weight=11.42s, Node delay=0.00s
Dijkstra Edge (11275948091, 8313615384): Weight=21.39s, Node delay=0.00s
Dijkstra Edge (8313615384, 628023505): Weight=10.90s, Node delay=0.00s
Dijkstra Edge (628023505, 338817681): Weight=1.42s, Node delay=0.00s
Dijkstra Edge (338817681, 628023610): Weight=17.00s, Node delay=0.00s
Dijkstra Edge (628023610, 502842696): Weight=8.08s, Node delay=0.00s
Dijkstra Edge (502842696, 247688619): Weight=3.60s, Node delay=0.00s
Dijkstra Edge (247688619, 7228559921): Weight=1.19s, Node delay=0.00s
Dijkstra Edge (7228559921, 436641882): Weight=49.32s, Node delay=0.00s
Dijkstra Edge (436641882, 247688641): Weight=8.47s, Node delay=0.00s
Dijkstra Edge (247688641, 247688658): Weight=11.10s, Node delay=0.00s
Dijkstra Edge (247688658, 244085896): Weight=9.39s, Node delay=0.00s
Dijkstra Edge (244085896, 11175233944): Weight=2.56s, Node delay=0.00s
Dijkstra Edge (11175233944, 245671739): Weight=8.61s, Node delay=0.00s
Dijkstra Edge (245671739, 245671659): Weight=6.77s, Node delay=0.00s
Dijkstra Edge (245671659, 11175233937): Weight=9.38s, Node delay=0.00s
Dijkstra Edge (11175233937, 430980610): Weight=10.19s, Node delay=0.00s
Dijkstra Edge (430980610, 244085789): Weight=10.82s, Node delay=0.00s
Dijkstra Edge (244085789, 11175218030): Weight=14.97s, Node delay=0.00s
Dijkstra Edge (11175218030, 11145118139): Weight=46.84s, Node delay=0.00s
Dijkstra Edge (11145118139, 347320175): Weight=6.27s, Node delay=0.00s
Dijkstra Edge (347320175, 561196001): Weight=9.51s, Node delay=0.00s
Dijkstra Edge (561196001, 347320259): Weight=8.03s, Node delay=0.00s
Dijkstra Edge (347320259, 332514224): Weight=4.03s, Node delay=0.00s
Dijkstra Edge (332514224, 347320367): Weight=2.66s, Node delay=0.00s
Dijkstra Edge (347320367, 347320507): Weight=5.78s, Node delay=0.00s
Dijkstra Edge (347320507, 332514070): Weight=3.63s, Node delay=0.00s
Dijkstra Edge (332514070, 347320674): Weight=3.17s, Node delay=0.00s
Dijkstra Edge (347320674, 343313075): Weight=4.90s, Node delay=0.00s
Dijkstra Edge (343313075, 347320733): Weight=3.88s, Node delay=0.00s
Dijkstra Edge (347320733, 343313094): Weight=4.31s, Node delay=0.00s
Dijkstra Edge (343313094, 347320944): Weight=2.50s, Node delay=0.00s
Dijkstra Edge (347320944, 343312947): Weight=7.86s, Node delay=0.00s
Dijkstra Edge (343312947, 347320160): Weight=0.81s, Node delay=0.00s
Dijkstra Edge (347320160, 343341661): Weight=5.99s, Node delay=0.00s
Dijkstra Edge (343341661, 343341906): Weight=8.67s, Node delay=0.00s
Dijkstra Edge (343341906, 356202583): Weight=9.53s, Node delay=0.00s
Dijkstra Edge (356202583, 7402639000): Weight=1.20s, Node delay=0.00s
Dijkstra Edge (7402639000, 343342454): Weight=12.10s, Node delay=0.00s
Dijkstra Edge (343342454, 11146960145): Weight=4.63s, Node delay=0.00s
Dijkstra Edge (11146960145, 347321277): Weight=8.75s, Node delay=0.00s
Dijkstra Edge (347321277, 347321392): Weight=9.53s, Node delay=0.00s
Dijkstra Edge (347321392, 431381002): Weight=14.37s, Node delay=0.00s
Dijkstra Edge (431381002, 431372974): Weight=6.73s, Node delay=0.00s
Dijkstra Edge (431372974, 431372973): Weight=14.44s, Node delay=0.00s
Dijkstra total path weight: 485.66s
Dijkstra expanded 5309 nodes
A* Edge (251653276, 338741184): Weight=16.91s, Node delay=0.00s
A* Edge (338741184, 428959955): Weight=9.98s, Node delay=0.00s
A* Edge (428959955, 244085859): Weight=11.99s, Node delay=0.00s
A* Edge (244085859, 428959956): Weight=20.08s, Node delay=0.00s
A* Edge (428959956, 11275948091): Weight=11.42s, Node delay=0.00s
A* Edge (11275948091, 8313615384): Weight=21.39s, Node delay=0.00s
A* Edge (8313615384, 628023505): Weight=10.90s, Node delay=0.00s
A* Edge (628023505, 338817681): Weight=1.42s, Node delay=0.00s
A* Edge (338817681, 628023610): Weight=17.00s, Node delay=0.00s
A* Edge (628023610, 502842696): Weight=8.08s, Node delay=0.00s
A* Edge (502842696, 247688619): Weight=3.60s, Node delay=0.00s
A* Edge (247688619, 7228559921): Weight=1.19s, Node delay=0.00s
A* Edge (7228559921, 436641882): Weight=49.32s, Node delay=0.00s
A* Edge (436641882, 247688641): Weight=8.47s, Node delay=0.00s
A* Edge (247688641, 247688658): Weight=11.10s, Node delay=0.00s
A* Edge (247688658, 244085896): Weight=9.39s, Node delay=0.00s
A* Edge (244085896, 11175233944): Weight=2.56s, Node delay=0.00s
A* Edge (11175233944, 245671739): Weight=8.61s, Node delay=0.00s
A* Edge (245671739, 245671659): Weight=6.77s, Node delay=0.00s
A* Edge (245671659, 11175233937): Weight=9.38s, Node delay=0.00s
A* Edge (11175233937, 430980610): Weight=10.19s, Node delay=0.00s
A* Edge (430980610, 244085789): Weight=10.82s, Node delay=0.00s
A* Edge (244085789, 11175218030): Weight=14.97s, Node delay=0.00s
A* Edge (11175218030, 11145118139): Weight=46.84s, Node delay=0.00s
A* Edge (11145118139, 347320175): Weight=6.27s, Node delay=0.00s
A* Edge (347320175, 561196001): Weight=9.51s, Node delay=0.00s
A* Edge (561196001, 347320259): Weight=8.03s, Node delay=0.00s
A* Edge (347320259, 332514224): Weight=4.03s, Node delay=0.00s
A* Edge (332514224, 347320367): Weight=2.66s, Node delay=0.00s
A* Edge (347320367, 347320507): Weight=5.78s, Node delay=0.00s
A* Edge (347320507, 332514070): Weight=3.63s, Node delay=0.00s
A* Edge (332514070, 347320674): Weight=3.17s, Node delay=0.00s
A* Edge (347320674, 343313075): Weight=4.90s, Node delay=0.00s
A* Edge (343313075, 347320733): Weight=3.88s, Node delay=0.00s
A* Edge (347320733, 343313094): Weight=4.31s, Node delay=0.00s
A* Edge (343313094, 347320944): Weight=2.50s, Node delay=0.00s
A* Edge (347320944, 343312947): Weight=7.86s, Node delay=0.00s
A* Edge (343312947, 347320160): Weight=0.81s, Node delay=0.00s
A* Edge (347320160, 343341661): Weight=5.99s, Node delay=0.00s
A* Edge (343341661, 343341906): Weight=8.67s, Node delay=0.00s
A* Edge (343341906, 356202583): Weight=9.53s, Node delay=0.00s
A* Edge (356202583, 7402639000): Weight=1.20s, Node delay=0.00s
A* Edge (7402639000, 343342454): Weight=12.10s, Node delay=0.00s
A* Edge (343342454, 11146960145): Weight=4.63s, Node delay=0.00s
A* Edge (11146960145, 347321277): Weight=8.75s, Node delay=0.00s
A* Edge (347321277, 347321392): Weight=9.53s, Node delay=0.00s
A* Edge (347321392, 431381002): Weight=14.37s, Node delay=0.00s
A* Edge (431381002, 431372974): Weight=6.73s, Node delay=0.00s
A* Edge (431372974, 431372973): Weight=14.44s, Node delay=0.00s
A* total path weight: 485.66s
A* expanded 2940 nodes

=== Route Comparison ===

Dijkstra's Algorithm:
- Path length: 50 nodes
- Estimated travel time: 485.66 seconds

A* Algorithm:
- Path length: 50 nodes
- Estimated travel time: 485.66 seconds

Generating route visualization...
invalid command name "1607884268352_check_queue"
    while executing
"1607884268352_check_queue"
    ("after" script)
invalid command name "1607886408256check_dpi_scaling"
    while executing
"1607886408256check_dpi_scaling"
    ("after" script)
invalid command name "1607808220800update_canvas_tile_images"
    while executing
"1607808220800update_canvas_tile_images"
    ("after" script)
invalid command name "1607808268160update"
    while executing
"1607808268160update"
    ("after" script)
invalid command name "1607789232896_click_animation"
    while executing
"1607789232896_click_animation"
    ("after" script)
Dijkstra path: 50 nodes, coordinates: 50 points
A* path: 50 nodes, coordinates: 50 points
Verified Dijkstra travel time: 485.66s
Verified A* travel time: 485.66s

Serving map at http://localhost:5500/data/processed/interactive_map.html

Route planning completed successfully!

Visualizations have been saved to:
- data/processed/route_comparison.png
- data/processed/interactive_map.html 